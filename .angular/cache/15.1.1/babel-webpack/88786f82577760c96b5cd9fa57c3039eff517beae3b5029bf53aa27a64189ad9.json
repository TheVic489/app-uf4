{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet EsdevenimentsComponent = class EsdevenimentsComponent {\n  constructor(\n  // --> per injectar, serveis, cookies, router\n  serviceUser, cookieService, router, listeventService) {\n    this.serviceUser = serviceUser;\n    this.cookieService = cookieService;\n    this.router = router;\n    this.listeventService = listeventService;\n    this.page = 1;\n  }\n  ngOnInit() {\n    //Execute Handle session\n    this.handleSesison();\n    this.events = this.listeventService.getEvents();\n    //this.serviceUser.getUsers();\n  }\n\n  deleteRow(element) {\n    var row = element.parentNode.parentNode;\n    row.parentNode.removeChild(row);\n  }\n  handleSesison() {\n    /// HANDLE SESSION ///\n    // Reload page to show logout button\n    if (sessionStorage.getItem('reloaded') === null) {\n      sessionStorage.setItem('reloaded', 'true');\n      window.location.reload();\n    }\n    // If it's not logged, redirect to login\n    this.isLogged = this.serviceUser.checkCookieSession();\n    if (!this.isLogged) {\n      this.router.navigate(['/login']);\n    }\n    /////////////////////////////////////////////7\n  }\n};\n\nEsdevenimentsComponent = __decorate([Component({\n  selector: 'app-esdeveniments',\n  templateUrl: './esdeveniments.component.html',\n  styleUrls: ['./esdeveniments.component.css']\n})], EsdevenimentsComponent);\nexport { EsdevenimentsComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAkB,eAAe;AAa5C,IAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EACjCC;EAAa;EACHC,WAAgC,EAChCC,aAA4B,EAC5BC,MAAc,EACdC,gBAA0C;IAH1C,gBAAW,GAAXH,WAAW;IACX,kBAAa,GAAbC,aAAa;IACb,WAAM,GAANC,MAAM;IACN,qBAAgB,GAAhBC,gBAAgB;IAK1B,SAAI,GAAW,CAAC;EAJb;EAMHC,QAAQ;IACN;IACA,IAAI,CAACC,aAAa,EAAE;IACpB,IAAI,CAACC,MAAM,GAAG,IAAI,CAACH,gBAAgB,CAACI,SAAS,EAAE;IAC/C;EACF;;EAEAC,SAAS,CAACC,OAAY;IACpB,IAAIC,GAAG,GAAGD,OAAO,CAACE,UAAU,CAACA,UAAU;IACvCD,GAAG,CAACC,UAAU,CAACC,WAAW,CAACF,GAAG,CAAC;EACjC;EACAL,aAAa;IACX;IACA;IACA,IAAIQ,cAAc,CAACC,OAAO,CAAC,UAAU,CAAC,KAAK,IAAI,EAAE;MAC/CD,cAAc,CAACE,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC;MAC1CC,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;;IAE1B;IACA,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACnB,WAAW,CAACoB,kBAAkB,EAAE;IACrD,IAAI,CAAC,IAAI,CAACD,QAAQ,EAAE;MAClB,IAAI,CAACjB,MAAM,CAACmB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;;IAElC;EACF;CACD;;AArCYvB,sBAAsB,eALlCD,SAAS,CAAC;EACTyB,QAAQ,EAAE,mBAAmB;EAC7BC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,GACW1B,sBAAsB,CAqClC;SArCYA,sBAAsB","names":["Component","EsdevenimentsComponent","constructor","serviceUser","cookieService","router","listeventService","ngOnInit","handleSesison","events","getEvents","deleteRow","element","row","parentNode","removeChild","sessionStorage","getItem","setItem","window","location","reload","isLogged","checkCookieSession","navigate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/vic/dawbio2/m06-client/UF3/my-app-2/src/app/esdeveniments/esdeveniments.component.ts"],"sourcesContent":["import { Component, OnInit }   from '@angular/core';\nimport { UsersServiceService } from 'src/app/services/users-service.service';\nimport { ListEventsServiceService } from 'src/app/services/list-events-service.service';\nimport { CookieService }       from 'ngx-cookie-service';\nimport { Router } from '@angular/router';\nimport { Event }  from '../model/Esdeveniments';\n\n\n@Component({\n  selector: 'app-esdeveniments',\n  templateUrl: './esdeveniments.component.html',\n  styleUrls: ['./esdeveniments.component.css'],\n})\nexport class EsdevenimentsComponent implements OnInit {\n  constructor( // --> per injectar, serveis, cookies, router\n    private serviceUser: UsersServiceService,\n    private cookieService: CookieService,\n    private router: Router,\n    private listeventService: ListEventsServiceService\n  ) {}\n\n  isLogged!: boolean;\n  events!: Event[];\n  page: number = 1;\n  \n  ngOnInit() {\n    //Execute Handle session\n    this.handleSesison();\n    this.events = this.listeventService.getEvents()\n    //this.serviceUser.getUsers();\n  }\n  \n  deleteRow(element: any): void {\n    var row = element.parentNode.parentNode;\n    row.parentNode.removeChild(row);\n  }\n  handleSesison(){\n    /// HANDLE SESSION ///\n    // Reload page to show logout button\n    if (sessionStorage.getItem('reloaded') === null) {\n      sessionStorage.setItem('reloaded', 'true');\n      window.location.reload();\n    }\n    // If it's not logged, redirect to login\n    this.isLogged = this.serviceUser.checkCookieSession();\n    if (!this.isLogged) { \n      this.router.navigate(['/login']);\n    }\n    /////////////////////////////////////////////7\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}