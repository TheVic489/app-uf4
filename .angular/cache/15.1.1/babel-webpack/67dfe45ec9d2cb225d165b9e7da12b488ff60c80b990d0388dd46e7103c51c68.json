{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/users-service.service\";\nimport * as i2 from \"ngx-cookie-service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction EsdevenimentsComponent_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const event_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", event_r1.name, \" - \", event_r1.date, \" \");\n  }\n}\nexport class EsdevenimentsComponent {\n  constructor(\n  // --> per injectar, serveis, cookies, router\n  serviceUser, cookieService, router) {\n    this.serviceUser = serviceUser;\n    this.cookieService = cookieService;\n    this.router = router;\n  }\n  ngOnInit() {\n    //Execute Handle session\n    this.handleSesison();\n    //this.serviceUser.getUsers();\n  }\n\n  handleSesison() {\n    /// HANDLE SESSION ///\n    // Reload page to show logout button\n    if (sessionStorage.getItem('reloaded') === null) {\n      sessionStorage.setItem('reloaded', 'true');\n      window.location.reload();\n    }\n    // If it's not logged, redirect to login\n    this.isLogged = this.serviceUser.checkCookieSession();\n    if (!this.isLogged) {\n      this.router.navigate(['/login']);\n    }\n    /////////////////////////////////////////////7\n  }\n}\n\nEsdevenimentsComponent.ɵfac = function EsdevenimentsComponent_Factory(t) {\n  return new (t || EsdevenimentsComponent)(i0.ɵɵdirectiveInject(i1.UsersServiceService), i0.ɵɵdirectiveInject(i2.CookieService), i0.ɵɵdirectiveInject(i3.Router));\n};\nEsdevenimentsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EsdevenimentsComponent,\n  selectors: [[\"app-esdeveniments\"]],\n  decls: 4,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"]],\n  template: function EsdevenimentsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"esdeveniments works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"ul\");\n      i0.ɵɵtemplate(3, EsdevenimentsComponent_li_3_Template, 2, 2, \"li\", 0);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.events);\n    }\n  },\n  dependencies: [i4.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAEIA,0BAAiC;IAC/BA,YACF;IAAAA,iBAAK;;;;IADHA,eACF;IADEA,oEACF;;;ACSJ,OAAM,MAAOC,sBAAsB;EACjCC;EAAa;EACHC,WAAgC,EAChCC,aAA4B,EAC5BC,MAAc;IAFd,gBAAW,GAAXF,WAAW;IACX,kBAAa,GAAbC,aAAa;IACb,WAAM,GAANC,MAAM;EACb;EAIHC,QAAQ;IACN;IACA,IAAI,CAACC,aAAa,EAAE;IAEpB;EACF;;EAEAA,aAAa;IACX;IACA;IACA,IAAIC,cAAc,CAACC,OAAO,CAAC,UAAU,CAAC,KAAK,IAAI,EAAE;MAC/CD,cAAc,CAACE,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC;MAC1CC,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;;IAE1B;IACA,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACX,WAAW,CAACY,kBAAkB,EAAE;IACrD,IAAI,CAAC,IAAI,CAACD,QAAQ,EAAE;MAClB,IAAI,CAACT,MAAM,CAACW,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;;IAElC;EACF;;;AA7BWf,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;QAAtBA,sBAAsB;EAAAgB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDbnCrB,yBAAG;MAAAA,oCAAoB;MAAAA,iBAAI;MAC3BA,0BAAI;MACAA,qEAEK;MACPA,iBAAK;;;MAHmBA,eAAS;MAATA,oCAAS","names":["i0","EsdevenimentsComponent","constructor","serviceUser","cookieService","router","ngOnInit","handleSesison","sessionStorage","getItem","setItem","window","location","reload","isLogged","checkCookieSession","navigate","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/vic/dawbio2/m06-client/UF3/my-app-2/src/app/esdeveniments/esdeveniments.component.html","/home/vic/dawbio2/m06-client/UF3/my-app-2/src/app/esdeveniments/esdeveniments.component.ts"],"sourcesContent":["<p>esdeveniments works!</p>\n<ul>\n    <li *ngFor=\"let event of events\">\n      {{ event.name }} - {{ event.date }}\n    </li>\n  </ul>","import { Component, OnInit }   from '@angular/core';\nimport { UsersServiceService } from 'src/app/services/users-service.service';\nimport { listEven } from 'src/app/services/list-events-service.service';\nimport { CookieService }       from 'ngx-cookie-service';\nimport { Router } from '@angular/router';\nimport { Event }  from '../model/Esdeveniments';\n\n\n@Component({\n  selector: 'app-esdeveniments',\n  templateUrl: './esdeveniments.component.html',\n  styleUrls: ['./esdeveniments.component.css'],\n})\nexport class EsdevenimentsComponent implements OnInit {\n  constructor( // --> per injectar, serveis, cookies, router\n    private serviceUser: UsersServiceService,\n    private cookieService: CookieService,\n    private router: Router\n  ) {}\n\n  isLogged!: boolean;\n\n  ngOnInit() {\n    //Execute Handle session\n    this.handleSesison();\n\n    //this.serviceUser.getUsers();\n  }\n  \n  handleSesison(){\n    /// HANDLE SESSION ///\n    // Reload page to show logout button\n    if (sessionStorage.getItem('reloaded') === null) {\n      sessionStorage.setItem('reloaded', 'true');\n      window.location.reload();\n    }\n    // If it's not logged, redirect to login\n    this.isLogged = this.serviceUser.checkCookieSession();\n    if (!this.isLogged) { \n      this.router.navigate(['/login']);\n    }\n    /////////////////////////////////////////////7\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}