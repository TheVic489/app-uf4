{"ast":null,"code":"import { User } from '../model/User';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserLoginRegisterService {\n  constructor(httpclient) {\n    this.httpclient = httpclient;\n    this.url = 'http://localhost:3000';\n  }\n  // Mètodes de conexió\n  validateLogin(username, password) {\n    let u = new User(username, password, '', '', '', '', '', '');\n    return this.httpclient.post(this.url + \"/login\", u, {\n      responseType: 'json'\n    });\n  }\n}\nUserLoginRegisterService.ɵfac = function UserLoginRegisterService_Factory(t) {\n  return new (t || UserLoginRegisterService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserLoginRegisterService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserLoginRegisterService,\n  factory: UserLoginRegisterService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAASA,IAAI,QAAQ,eAAe;;;AAKpC,OAAM,MAAOC,wBAAwB;EAEnCC,YAAqBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAE/B,QAAG,GAAW,uBAAuB;EAFU;EAI/C;EACAC,aAAa,CAACC,QAAa,EAAEC,QAAa;IACxC,IAAIC,CAAC,GAAG,IAAIP,IAAI,CAACK,QAAQ,EAACC,QAAQ,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC;IAErD,OAAO,IAAI,CAACH,UAAU,CAACK,IAAI,CAAO,IAAI,CAACC,GAAG,GAAC,QAAQ,EAAEF,CAAC,EAAE;MAACG,YAAY,EAAE;IAAM,CAAC,CAAC;EAEjF;;AAZWT,wBAAwB;mBAAxBA,wBAAwB;AAAA;AAAxBA,wBAAwB;SAAxBA,wBAAwB;EAAAU,SAAxBV,wBAAwB;EAAAW,YAFvB;AAAM","names":["User","UserLoginRegisterService","constructor","httpclient","validateLogin","username","password","u","post","url","responseType","factory","providedIn"],"sourceRoot":"","sources":["/home/vic/app-uf4/src/app/services/user-login-register.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from '../model/User';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserLoginRegisterService {\n\n  constructor( private httpclient: HttpClient) { }\n\n  url: string = 'http://localhost:3000'\n\n  // Mètodes de conexió\n  validateLogin(username: any, password: any): Observable<any> { \n    let u = new User(username,password,'','','','','','');\n\n    return this.httpclient.post<User>(this.url+\"/login\", u, {responseType: 'json'});\n  \n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}