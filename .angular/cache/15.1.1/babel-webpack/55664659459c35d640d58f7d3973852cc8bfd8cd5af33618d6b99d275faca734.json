{"ast":null,"code":"import { count } from 'rxjs';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/servicio-frutas.service\";\nimport * as i2 from \"@angular/common\";\nfunction Compo1Component_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 5);\n    i0.ɵɵtext(1, \" *El nombre \\u00E9s obligatorio \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction Compo1Component_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 5);\n    i0.ɵɵtext(1, \" *Minimo 6 letras \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction Compo1Component_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 5);\n    i0.ɵɵtext(1, \" *Solo letras \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction Compo1Component_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 5);\n    i0.ɵɵtext(1, \" *La contrase\\u00F1a \\u00E9s obligatoria \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction Compo1Component_span_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 5);\n    i0.ɵɵtext(1, \" *Minimo 8 letras \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction Compo1Component_span_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 5);\n    i0.ɵɵtext(1, \" *Solo letras y numeros \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction Compo1Component_p_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const fruta_r7 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", fruta_r7, \"\\n\");\n  }\n}\nexport class Compo1Component {\n  // Para llamar a servicios, carga de cookies\n  constructor(servicioFrutas) {\n    this.servicioFrutas = servicioFrutas;\n    this.myForm = new FormGroup({\n      myUsername: new FormControl('', [Validators.required, Validators.minLength(6), Validators.pattern('[-_a-zA-Z]*')]),\n      myPassword: new FormControl('', [Validators.required, Validators.minLength(8), Validators.pattern('[-_a-zA-Z0-9]*')])\n    });\n  }\n  count() {\n    count();\n  }\n  // Inicializacion de variables \n  ngOnInit() {\n    this.misFrutas = this.servicioFrutas.getFrutas();\n  }\n}\nCompo1Component.ɵfac = function Compo1Component_Factory(t) {\n  return new (t || Compo1Component)(i0.ɵɵdirectiveInject(i1.ServicioFrutasService));\n};\nCompo1Component.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: Compo1Component,\n  selectors: [[\"app-compo1\"]],\n  decls: 16,\n  vars: 8,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"type\", \"text\", \"formControlName\", \"myName\", \"name\", \"myName\", \"id\", \"myName\"], [\"class\", \"danger\", 4, \"ngIf\"], [\"type\", \"password\", \"formControlName\", \"myPassword\", \"name\", \"myPassword\", \"id\", \"myPassword\"], [4, \"ngFor\", \"ngForOf\"], [1, \"danger\"]],\n  template: function Compo1Component_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"Login!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function Compo1Component_Template_form_ngSubmit_2_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵelementStart(3, \"p\");\n      i0.ɵɵtext(4, \" Username: \");\n      i0.ɵɵelement(5, \"input\", 1);\n      i0.ɵɵtemplate(6, Compo1Component_span_6_Template, 2, 0, \"span\", 2);\n      i0.ɵɵtemplate(7, Compo1Component_span_7_Template, 2, 0, \"span\", 2);\n      i0.ɵɵtemplate(8, Compo1Component_span_8_Template, 2, 0, \"span\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"p\");\n      i0.ɵɵtext(10, \" Contrase\\u00F1a: \");\n      i0.ɵɵelement(11, \"input\", 3);\n      i0.ɵɵtemplate(12, Compo1Component_span_12_Template, 2, 0, \"span\", 2);\n      i0.ɵɵtemplate(13, Compo1Component_span_13_Template, 2, 0, \"span\", 2);\n      i0.ɵɵtemplate(14, Compo1Component_span_14_Template, 2, 0, \"span\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(15, Compo1Component_p_15_Template, 2, 1, \"p\", 4);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      let tmp_1_0;\n      let tmp_2_0;\n      let tmp_3_0;\n      let tmp_4_0;\n      let tmp_5_0;\n      let tmp_6_0;\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.myForm);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.myForm.get(\"myName\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"required\"]) && ((tmp_1_0 = ctx.myForm.get(\"myName\")) == null ? null : tmp_1_0.touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx.myForm.get(\"myName\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors[\"minlength\"]);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (tmp_3_0 = ctx.myForm.get(\"myName\")) == null ? null : tmp_3_0.errors == null ? null : tmp_3_0.errors[\"pattern\"]);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.myForm.get(\"myPassword\")) == null ? null : tmp_4_0.errors == null ? null : tmp_4_0.errors[\"required\"]) && ((tmp_4_0 = ctx.myForm.get(\"myPassword\")) == null ? null : tmp_4_0.touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (tmp_5_0 = ctx.myForm.get(\"myPassword\")) == null ? null : tmp_5_0.errors == null ? null : tmp_5_0.errors[\"minlength\"]);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (tmp_6_0 = ctx.myForm.get(\"myPassword\")) == null ? null : tmp_6_0.errors == null ? null : tmp_6_0.errors[\"pattern\"]);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.misFrutas);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,KAAK,QAAQ,MAAM;AAE5B,SAASC,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;ICK7DC,+BACgE;IAC9DA,gDACF;IAAAA,iBAAO;;;;;IACPA,+BAA8E;IAC5EA,kCACF;IAAAA,iBAAO;;;;;IACPA,+BAA4E;IAC1EA,8BACF;IAAAA,iBAAO;;;;;IAOPA,+BACoE;IAClEA,yDACF;IAAAA,iBAAO;;;;;IACPA,+BAAkF;IAChFA,kCACF;IAAAA,iBAAO;;;;;IACPA,+BAAgF;IAC9EA,wCACF;IAAAA,iBAAO;;;;;IAGbA,yBAAmC;IAC/BA,YACJ;IAAAA,iBAAI;;;;IADAA,eACJ;IADIA,0CACJ;;;AD5BA,OAAM,MAAOC,eAAe;EAkB1B;EACAC,YAAsBC,cAAqC;IAArC,mBAAc,GAAdA,cAAc;IAjBpC,WAAM,GAAG,IAAIN,SAAS,CAAC;MACrBO,UAAU,EAAE,IAAIN,WAAW,CAAC,EAAE,EAAE,CAC9BC,UAAU,CAACM,QAAQ,EACnBN,UAAU,CAACO,SAAS,CAAC,CAAC,CAAC,EACvBP,UAAU,CAACQ,OAAO,CAAC,aAAa,CAAC,CAClC,CAAC;MAEFC,UAAU,EAAE,IAAIV,WAAW,CAAC,EAAE,EAAE,CAC9BC,UAAU,CAACM,QAAQ,EACnBN,UAAU,CAACO,SAAS,CAAC,CAAC,CAAC,EACvBP,UAAU,CAACQ,OAAO,CAAC,gBAAgB,CAAC,CACrC;KACF,CAAC;EAOF;EACAX,KAAK;IACHA,KAAK,EAAE;EACT;EACA;EACAa,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACP,cAAc,CAACQ,SAAS,EAAE;EAElD;;AA7BWV,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAW;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCT5BhB,yBAAG;MAAAA,sBAAM;MAAAA,iBAAI;MAEbA,+BAAiD;MAAtBA;QAAA,OAAYiB,YAAQ;MAAA,EAAC;MAC5CjB,yBAAG;MACDA,2BACA;MAAAA,2BAAwE;MAExEA,kEAGO;MACPA,kEAEO;MACPA,kEAEO;MACTA,iBAAI;MAEJA,yBAAG;MACDA,mCACA;MAAAA,4BAAwF;MAExFA,oEAGO;MACPA,oEAEO;MACPA,oEAEO;MACTA,iBAAI;MAERA,8DAEI;MAnCJA,iBAAiD;;;;;;;;;MAA3CA,eAAoB;MAApBA,sCAAoB;MAKEA,eACwC;MADxCA,oNACwC;MAGxCA,eAAsD;MAAtDA,wIAAsD;MAGtDA,eAAoD;MAApDA,sIAAoD;MASpDA,eAC4C;MAD5CA,4NAC4C;MAG5CA,eAA0D;MAA1DA,4IAA0D;MAG1DA,eAAwD;MAAxDA,0IAAwD;MAK/DA,eAAY;MAAZA,uCAAY","names":["count","FormGroup","FormControl","Validators","i0","Compo1Component","constructor","servicioFrutas","myUsername","required","minLength","pattern","myPassword","ngOnInit","misFrutas","getFrutas","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/vic/dawbio2/m06-client/UF3/my-app-2/src/app/components/compo1/compo1.component.ts","/home/vic/dawbio2/m06-client/UF3/my-app-2/src/app/components/compo1/compo1.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { count } from 'rxjs';\nimport { ServicioFrutasService } from 'src/app/services/servicio-frutas.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-compo1',\n  templateUrl: './compo1.component.html',\n  styleUrls: ['./compo1.component.css']\n})\nexport class Compo1Component implements OnInit{\n\n  myForm = new FormGroup({\n    myUsername: new FormControl('', [\n      Validators.required,\n      Validators.minLength(6),\n      Validators.pattern('[-_a-zA-Z]*')\n    ]),\n\n    myPassword: new FormControl('', [\n      Validators.required,\n      Validators.minLength(8),\n      Validators.pattern('[-_a-zA-Z0-9]*')\n    ]),\n  })\n  // Declaracion de propiedades de la classe \n  misFrutas!: string[];\n\n  // Para llamar a servicios, carga de cookies\n  constructor ( private servicioFrutas: ServicioFrutasService) {\n\n  }\n  count(){\n    count()\n  }\n  // Inicializacion de variables \n  ngOnInit(): void {\n    this.misFrutas = this.servicioFrutas.getFrutas()\n\n  }\n}\n","\n<p>Login!</p>\n\n<form [formGroup]=\"myForm\" (ngSubmit)=\"submit()\">\n    <p>\n      Username:\n      <input type=\"text\" formControlName=\"myName\" name=\"myName\" id=\"myName\" />\n      \n      <span class=\"danger\" *ngIf=\"this.myForm.get('myName')?.errors?.['required'] &&\n                                  this.myForm.get('myName')?.touched\">\n        *El nombre és obligatorio\n      </span>\n      <span class=\"danger\" *ngIf=\"this.myForm.get('myName')?.errors?.['minlength']\">\n        *Minimo 6 letras\n      </span>\n      <span class=\"danger\" *ngIf=\"this.myForm.get('myName')?.errors?.['pattern']\">\n        *Solo letras\n      </span>\n    </p>\n    \n    <p>\n      Contraseña:\n      <input type=\"password\" formControlName=\"myPassword\" name=\"myPassword\" id=\"myPassword\" />\n      \n      <span class=\"danger\" *ngIf=\"this.myForm.get('myPassword')?.errors?.['required'] &&\n                                  this.myForm.get('myPassword')?.touched\">\n        *La contraseña és obligatoria\n      </span>\n      <span class=\"danger\" *ngIf=\"this.myForm.get('myPassword')?.errors?.['minlength']\">\n        *Minimo 8 letras\n      </span>\n      <span class=\"danger\" *ngIf=\"this.myForm.get('myPassword')?.errors?.['pattern']\">\n        *Solo letras y numeros\n      </span>\n    </p>\n    \n<p *ngFor=\"let fruta of misFrutas\">\n    {{ fruta }}\n</p>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}