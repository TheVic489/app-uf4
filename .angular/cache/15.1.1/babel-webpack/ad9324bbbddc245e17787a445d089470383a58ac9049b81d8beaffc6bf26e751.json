{"ast":null,"code":"import { Event } from '../model/Esdeveniments';\nimport * as i0 from \"@angular/core\";\n//  Servicio de las listas de los eventos\nexport class ListEventsServiceService {\n  constructor() {\n    this.events = []; //Events void list\n    this.eventTypes = ['Music', 'Sports', 'Theater', 'Comedy', 'Technology', 'Anime']; // Event Types\n    this.eventPlaces = ['New York', 'London', 'Paris', 'Berlin', 'Tokyo', 'Barcelona', 'Albacete']; // Event Places\n    this.eventDates = ['10-12-2023', '03-02-2023', '04-10-2023', '10-12-2023', '01-03-2023']; // Event Dates\n  }\n  // Generate 100 random events and push to events list \n  getEvents() {\n    for (let i = 0; i < 100; i++) {\n      const eventName = `Event ${i + 1}`;\n      const eventType = this.eventTypes[Math.floor(Math.random() * this.eventTypes.length)];\n      const eventDate = this.eventDates[Math.floor(Math.random() * this.eventDates.length)];\n      const eventPlace = this.eventPlaces[Math.floor(Math.random() * this.eventPlaces.length)];\n      const eventPrice = Math.floor(Math.random() * 100) + 1 + '€';\n      const event = new Event(eventName, eventType, eventDate, eventPlace, eventPrice);\n      this.events.push(event);\n    }\n    return this.events;\n  }\n}\nListEventsServiceService.ɵfac = function ListEventsServiceService_Factory(t) {\n  return new (t || ListEventsServiceService)();\n};\nListEventsServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ListEventsServiceService,\n  factory: ListEventsServiceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,KAAK,QAAS,wBAAwB;;AAC/C;AAKA,OAAM,MAAOC,wBAAwB;EAEnCC;IAMA,WAAM,GAAY,EAAE,CAAC,CAAC;IACtB,eAAU,GAAI,CAAC,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC,CAAa;IAC3F,gBAAW,GAAG,CAAC,UAAU,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,WAAW,EAAE,UAAU,CAAC,CAAC,CAAC;IAC3F,eAAU,GAAI,CAAC,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,CAAC,CAAC,CAAM;EALvF;EAOJ;EACAC,SAAS;IACP,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,GAAG,EAAEA,CAAC,EAAE,EAAE;MAC5B,MAAMC,SAAS,GAAG,SAASD,CAAC,GAAG,CAAC,EAAE;MAClC,MAAME,SAAS,GAAG,IAAI,CAACC,UAAU,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,IAAI,CAACH,UAAU,CAACI,MAAM,CAAC,CAAC;MACrF,MAAMC,SAAS,GAAG,IAAI,CAACC,UAAU,CAACL,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,IAAI,CAACG,UAAU,CAACF,MAAM,CAAC,CAAC;MACrF,MAAMG,UAAU,GAAG,IAAI,CAACC,WAAW,CAACP,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,IAAI,CAACK,WAAW,CAACJ,MAAM,CAAC,CAAC;MACxF,MAAMK,UAAU,GAAIR,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,GAAI,GAAG;MAE9D,MAAMO,KAAK,GAAG,IAAIjB,KAAK,CAACK,SAAS,EAAEC,SAAS,EAAEM,SAAS,EAAEE,UAAU,EAAEE,UAAU,CAAC;MAChF,IAAI,CAACE,MAAM,CAACC,IAAI,CAACF,KAAK,CAAC;;IAGzB,OAAO,IAAI,CAACC,MAAM;EACpB;;AA3BWjB,wBAAwB;mBAAxBA,wBAAwB;AAAA;AAAxBA,wBAAwB;SAAxBA,wBAAwB;EAAAmB,SAAxBnB,wBAAwB;EAAAoB,YAFvB;AAAM","names":["Event","ListEventsServiceService","constructor","getEvents","i","eventName","eventType","eventTypes","Math","floor","random","length","eventDate","eventDates","eventPlace","eventPlaces","eventPrice","event","events","push","factory","providedIn"],"sourceRoot":"","sources":["/home/vic/dawbio2/m06-client/UF3/my-app-2/src/app/services/list-events-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Event }  from '../model/Esdeveniments';\n//  Servicio de las listas de los eventos\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ListEventsServiceService {\n\n  constructor(\n    // private serviceUser: UsersServiceService,\n    // private cookieService: CookieService,\n    // private router: Router\n  ) { }\n\n  events: Event[] = []; //Events void list\n  eventTypes  = ['Music', 'Sports', 'Theater', 'Comedy', 'Technology', 'Anime'];             // Event Types\n  eventPlaces = ['New York', 'London', 'Paris', 'Berlin', 'Tokyo', 'Barcelona', 'Albacete']; // Event Places\n  eventDates  = ['10-12-2023', '03-02-2023', '04-10-2023', '10-12-2023', '01-03-2023'];      // Event Dates\n\n  // Generate 100 random events and push to events list \n  getEvents() {\n    for (let i = 0; i < 100; i++) {\n      const eventName = `Event ${i + 1}`;\n      const eventType = this.eventTypes[Math.floor(Math.random() * this.eventTypes.length)];\n      const eventDate = this.eventDates[Math.floor(Math.random() * this.eventDates.length)];\n      const eventPlace = this.eventPlaces[Math.floor(Math.random() * this.eventPlaces.length)];\n      const eventPrice = (Math.floor(Math.random() * 100) + 1) + '€';\n    \n      const event = new Event(eventName, eventType, eventDate, eventPlace, eventPrice);\n      this.events.push(event);\n\n    }\n    return this.events;\n  }  \n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}