{"ast":null,"code":"import { User } from '../model/User';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserLoginRegisterService {\n  constructor(httpclient) {\n    this.httpclient = httpclient;\n    this.url = 'http://localhost:3000';\n    this.usuariSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('usuari'))); //estat inicial del BehaviorSubject\n    this.usuario = this.usuariSubject.asObservable();\n  }\n  usuariData() {\n    return this.usuariSubject.value;\n  }\n  // Mètodes de conexió\n  validateLogin(username, password) {\n    let u = new User(username, password, '', '', '', '', '', '');\n    return this.httpclient.post(this.url + \"/login\", u, {\n      responseType: 'json'\n    }).pipe(map(res => {\n      console.log(\"Resposta del servidor\");\n      console.log(JSON.stringify(res));\n      if (res != null) {\n        const user = new User(res.dni, res.usuari, res.contrasenya, res.token);\n        console.log(\"Objecte Usuari\");\n        console.log(user);\n        localStorage.setItem('usuari', JSON.stringify(res));\n        // console.log(\"LocalStorage\");\n        // console.log(localStorage.getItem('usuari'));\n        this.usuariSubject.next(user);\n      }\n      return res;\n    }));\n  }\n}\nUserLoginRegisterService.ɵfac = function UserLoginRegisterService_Factory(t) {\n  return new (t || UserLoginRegisterService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserLoginRegisterService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserLoginRegisterService,\n  factory: UserLoginRegisterService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAASA,IAAI,QAAQ,eAAe;AACpC,SAASC,eAAe,QAAQ,MAAM;;;AAItC,OAAM,MAAOC,wBAAwB;EAUnCC,YAAqBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAM/B,QAAG,GAAW,uBAAuB;IAJrC,IAAI,CAACC,aAAa,GAAG,IAAIJ,eAAe,CAAOK,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAE,CAAC,CAAC,CAAC;IAC5F,IAAI,CAACC,OAAO,GAAS,IAAI,CAACL,aAAa,CAACM,YAAY,EAAE;EACtD;EAROC,UAAU;IACf,OAAO,IAAI,CAACP,aAAa,CAACQ,KAAK;EACjC;EAUA;EACAC,aAAa,CAACC,QAAa,EAAEC,QAAa;IACxC,IAAIC,CAAC,GAAG,IAAIjB,IAAI,CAACe,QAAQ,EAACC,QAAQ,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC;IAErD,OAAO,IAAI,CAACZ,UAAU,CAACc,IAAI,CAAO,IAAI,CAACC,GAAG,GAAC,QAAQ,EAAEF,CAAC,EAAE;MAACG,YAAY,EAAE;IAAM,CAAC,CAAC,CAACC,IAAI,CAClFC,GAAG,CAACC,GAAG,IAAG;MACRC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACpCD,OAAO,CAACC,GAAG,CAACnB,IAAI,CAACoB,SAAS,CAACH,GAAG,CAAC,CAAC;MAEhC,IAAGA,GAAG,IAAE,IAAI,EAAC;QACX,MAAMI,IAAI,GAAM,IAAI3B,IAAI,CAACuB,GAAG,CAACK,GAAG,EAAEL,GAAG,CAACM,MAAM,EAAEN,GAAG,CAACO,WAAW,EAAEP,GAAG,CAACQ,KAAK,CAAC;QACzEP,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;QAC7BD,OAAO,CAACC,GAAG,CAACE,IAAI,CAAC;QAEjBnB,YAAY,CAACwB,OAAO,CAAC,QAAQ,EAAC1B,IAAI,CAACoB,SAAS,CAACH,GAAG,CAAC,CAAC;QAClD;QACA;QAEA,IAAI,CAAClB,aAAa,CAAC4B,IAAI,CAACN,IAAI,CAAC;;MAE/B,OAAOJ,GAAG;IAEZ,CAAC,CAEF;EAIH;;AA9CWrB,wBAAwB;mBAAxBA,wBAAwB;AAAA;AAAxBA,wBAAwB;SAAxBA,wBAAwB;EAAAgC,SAAxBhC,wBAAwB;EAAAiC,YAFvB;AAAM","names":["User","BehaviorSubject","UserLoginRegisterService","constructor","httpclient","usuariSubject","JSON","parse","localStorage","getItem","usuario","asObservable","usuariData","value","validateLogin","username","password","u","post","url","responseType","pipe","map","res","console","log","stringify","user","dni","usuari","contrasenya","token","setItem","next","factory","providedIn"],"sourceRoot":"","sources":["/home/vic/app-uf4/src/app/services/user-login-register.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from '../model/User';\nimport { BehaviorSubject } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserLoginRegisterService {\n\n  //per a la sincronització\n  private usuariSubject: BehaviorSubject<User>;\n  public  usuario: Observable<User>; \n   \n  public usuariData():User{\n    return this.usuariSubject.value;\n  }\n\n  constructor( private httpclient: HttpClient) {   \n\n  this.usuariSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('usuari')!));//estat inicial del BehaviorSubject\n  this.usuario       = this.usuariSubject.asObservable();\n  }\n\n  url: string = 'http://localhost:3000'\n\n  // Mètodes de conexió\n  validateLogin(username: any, password: any): Observable<any> { \n    let u = new User(username,password,'','','','','','');\n\n    return this.httpclient.post<User>(this.url+\"/login\", u, {responseType: 'json'}).pipe(\n      map(res =>{\n        console.log(\"Resposta del servidor\");\n        console.log(JSON.stringify(res));\n\n        if(res!=null){\n          const user:User=new User(res.dni ,res.usuari, res.contrasenya, res.token);\n          console.log(\"Objecte Usuari\");\n          console.log(user);\n          \n          localStorage.setItem('usuari',JSON.stringify(res));\n          // console.log(\"LocalStorage\");\n          // console.log(localStorage.getItem('usuari'));\n\n          this.usuariSubject.next(user);\n        }\n        return res;\n\n      }\n\n    );\n\n    \n  \n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}