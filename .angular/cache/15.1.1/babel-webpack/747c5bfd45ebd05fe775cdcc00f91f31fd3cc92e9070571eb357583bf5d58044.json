{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/users-service.service\";\nimport * as i2 from \"ngx-cookie-service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction Compo2Component_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 8);\n    i0.ɵɵtext(1, \" *Escribe el ususario \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction Compo2Component_span_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 8);\n    i0.ɵɵtext(1, \" *Escribe la contrase\\u00F1a \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class Compo2Component {\n  constructor(serviceUser, cookieService) {\n    this.serviceUser = serviceUser;\n    this.cookieService = cookieService;\n    //Init vars\n    this.nombre = '';\n    this.role = '';\n    this.result = '';\n    this.myForm = new FormGroup({\n      username: new FormControl('', [Validators.required]),\n      password: new FormControl('', [Validators.required])\n    });\n  }\n  submit() {\n    //solo si clicas\n    this.serviceUser.validateUser(this.myForm.value.username, this.myForm.value.password);\n    // Get cookie \n    this.nombre = this.cookieService.get('nombre');\n    this.role = this.cookieService.get('role');\n  }\n}\nCompo2Component.ɵfac = function Compo2Component_Factory(t) {\n  return new (t || Compo2Component)(i0.ɵɵdirectiveInject(i1.UsersServiceService), i0.ɵɵdirectiveInject(i2.CookieService));\n};\nCompo2Component.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: Compo2Component,\n  selectors: [[\"app-compo2\"]],\n  decls: 18,\n  vars: 7,\n  consts: [[1, \"container\"], [1, \"title\", \"form\"], [1, \"form\", 3, \"formGroup\", \"ngSubmit\"], [\"type\", \"text\", \"formControlName\", \"username\", 1, \"form-control\"], [\"class\", \"red-font\", 4, \"ngIf\"], [\"type\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"green-font\"], [1, \"red-font\"]],\n  template: function Compo2Component_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\", 1);\n      i0.ɵɵtext(2, \"Iniciar sesi\\u00F3n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function Compo2Component_Template_form_ngSubmit_3_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵelementStart(4, \"p\");\n      i0.ɵɵtext(5, \"Username: \");\n      i0.ɵɵelement(6, \"input\", 3);\n      i0.ɵɵtemplate(7, Compo2Component_span_7_Template, 2, 0, \"span\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"p\");\n      i0.ɵɵtext(9, \"Contrase\\u00F1a: \");\n      i0.ɵɵelement(10, \"input\", 5);\n      i0.ɵɵtemplate(11, Compo2Component_span_11_Template, 2, 0, \"span\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"button\", 6);\n      i0.ɵɵtext(13, \"Enviar\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\", 7);\n      i0.ɵɵtext(15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\");\n      i0.ɵɵtext(17);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      let tmp_1_0;\n      let tmp_2_0;\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.myForm);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.myForm.get(\"username\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"required\"]) && ((tmp_1_0 = ctx.myForm.get(\"username\")) == null ? null : tmp_1_0.touched));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.myForm.get(\"password\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors[\"required\"]) && ((tmp_2_0 = ctx.myForm.get(\"correo\")) == null ? null : tmp_2_0.touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.myForm.invalid);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\" \", ctx.result, \" \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate2(\" \", ctx.nombre, \" \", ctx.role, \" \");\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\".inline[_ngcontent-%COMP%]\\n{\\n    display: inline-block;\\n}\\n\\nform.form[_ngcontent-%COMP%] {\\n    margin-left: 30%;\\n    margin-right: 30%;\\n}\\n\\n.title[_ngcontent-%COMP%] {\\n    margin-bottom: 20px;\\n    margin-top: 20px; \\n    text-align: center;  \\n}\\n.red-font[_ngcontent-%COMP%] {\\n    color: rgb(255, 112, 112);\\n}\\n.green-font[_ngcontent-%COMP%] {\\n    color: rgb(88, 212, 111)\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9jb21wbzIvY29tcG8yLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0lBRUkscUJBQXFCO0FBQ3pCOztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLG1CQUFtQjtJQUNuQixnQkFBZ0I7SUFDaEIsa0JBQWtCO0FBQ3RCO0FBQ0E7SUFDSSx5QkFBeUI7QUFDN0I7QUFDQTtJQUNJO0FBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyIuaW5saW5lXG57XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG5mb3JtLmZvcm0ge1xuICAgIG1hcmdpbi1sZWZ0OiAzMCU7XG4gICAgbWFyZ2luLXJpZ2h0OiAzMCU7XG59XG5cbi50aXRsZSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgICBtYXJnaW4tdG9wOiAyMHB4OyBcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7ICBcbn1cbi5yZWQtZm9udCB7XG4gICAgY29sb3I6IHJnYigyNTUsIDExMiwgMTEyKTtcbn1cbi5ncmVlbi1mb250IHtcbiAgICBjb2xvcjogcmdiKDg4LCAyMTIsIDExMSlcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;;;ICIvDC,+BACoE;IACpEA,sCACA;IAAAA,iBAAO;;;;;IAKPA,+BACkE;IAC9DA,6CACJ;IAAAA,iBAAO;;;ADNnB,OAAM,MAAOC,eAAe;EAC1BC,YAAoBC,WAAgC,EAAWC,aAA4B;IAAvE,gBAAW,GAAXD,WAAW;IAAgC,kBAAa,GAAbC,aAAa;IAE5E;IACA,WAAM,GAAG,EAAE;IACX,SAAI,GAAK,EAAE;IACX,WAAM,GAAG,EAAE;IAEX,WAAM,GAAG,IAAIP,SAAS,CAAC;MACrBQ,QAAQ,EAAE,IAAIP,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACO,QAAQ,CAAC,CAAC;MAEpDC,QAAQ,EAAE,IAAIT,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACO,QAAQ,CAAC;KACpD,CAAC;EAX4F;EAa9FE,MAAM;IACJ;IACA,IAAI,CAACL,WAAW,CAACM,YAAY,CAAC,IAAI,CAACC,MAAM,CAACC,KAAK,CAACN,QAAQ,EAAE,IAAI,CAACK,MAAM,CAACC,KAAK,CAACJ,QAAQ,CAAC;IACrF;IACA,IAAI,CAACK,MAAM,GAAG,IAAI,CAACR,aAAa,CAACS,GAAG,CAAC,QAAQ,CAAC;IAC9C,IAAI,CAACC,IAAI,GAAK,IAAI,CAACV,aAAa,CAACS,GAAG,CAAC,MAAM,CAAC;EAC9C;;AApBWZ,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAc;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV5BnB,8BAAuB;MACKA,mCAAc;MAAAA,iBAAK;MAC3CA,+BAA+D;MAAtBA;QAAA,OAAYoB,YAAQ;MAAA,EAAC;MAC1DpB,yBAAG;MAAAA,0BACC;MAAAA,2BAAmE;MACnEA,kEAGO;MACXA,iBAAI;MAEJA,yBAAG;MAAAA,iCACC;MAAAA,4BAAuE;MACvEA,oEAGO;MACXA,iBAAI;MAEJA,kCAA0E;MAAAA,uBAAM;MAAAA,iBAAS;MAE7FA,+BAAwB;MACpBA,aACJ;MAAAA,iBAAM;MACNA,4BAAK;MACDA,aAEJ;MAAAA,iBAAM;;;;;MAzBcA,eAAoB;MAApBA,sCAAoB;MAGRA,eAC0C;MAD1CA,wNAC0C;MAO1CA,eACwC;MADxCA,sNACwC;MAKpCA,eAA2B;MAA3BA,6CAA2B;MAG3DA,eACJ;MADIA,2CACJ;MAEIA,eAEJ;MAFIA,0DAEJ","names":["FormGroup","FormControl","Validators","i0","Compo2Component","constructor","serviceUser","cookieService","username","required","password","submit","validateUser","myForm","value","nombre","get","role","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/vic/dawbio2/m06-client/UF3/my-app-2/src/app/components/compo2/compo2.component.ts","/home/vic/dawbio2/m06-client/UF3/my-app-2/src/app/components/compo2/compo2.component.html"],"sourcesContent":["import { Component }                          from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { UsersServiceService }                from 'src/app/services/users-service.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-compo2',\n  templateUrl: './compo2.component.html',\n  styleUrls: ['./compo2.component.css'],\n})\nexport class Compo2Component {\n  constructor(private serviceUser: UsersServiceService,  private cookieService: CookieService) {}\n\n  //Init vars\n  nombre = '';\n  role   = ''\n  result = ''\n\n  myForm = new FormGroup({\n    username: new FormControl('', [Validators.required]),\n\n    password: new FormControl('', [Validators.required]),\n  });\n\n  submit(): void {\n    //solo si clicas\n    this.serviceUser.validateUser(this.myForm.value.username, this.myForm.value.password)\n    // Get cookie \n    this.nombre = this.cookieService.get('nombre');\n    this.role   = this.cookieService.get('role');\n  }\n}\n","<div class=\"container\">\n    <h3 class=\"title form \">Iniciar sesión</h3> \n    <form  class=\"form\" [formGroup]=\"myForm\" (ngSubmit)=\"submit()\">\n        <p>Username:\n            <input class=\"form-control\" type=\"text\" formControlName=\"username\">\n            <span class=\"red-font\" *ngIf=\"this.myForm.get('username')?.errors?.['required'] && \n                                          this.myForm.get('username')?.touched\">\n            *Escribe el ususario\n            </span>\n        </p>\n\n        <p>Contraseña:\n            <input type=\"password\" class=\"form-control\" formControlName=\"password\">\n            <span class=\"red-font\" *ngIf=\"this.myForm.get('password')?.errors?.['required'] && \n                                          this.myForm.get('correo')?.touched\">\n                *Escribe la contraseña\n            </span>\n        </p>\n\n        <button class=\"btn btn-primary\" [disabled]=\"myForm.invalid\" type=\"submit\">Enviar</button>\n    </form>\n    <div class=\"green-font\">\n        {{result}}\n    </div>\n    <div>\n        {{nombre}}\n        {{role}}\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}