{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-cookie-service\";\nexport class UsersServiceService {\n  constructor(cookieService) {\n    this.cookieService = cookieService;\n    this.usernames = [\"Juan\", \"Pedro\", \"Miguel\", \"Andrés\", \"María\", \"user01\", \"user02\"];\n    this.correos = [\"gmail.com\", \"hotmail.com\", \"yahoo.com\", \"outlook.com\"];\n    this.contraseñas = [\"contra\", \"seña\", \"pass04\", \"pass02\", \"pass03\", \"pass01\"];\n    this.roles = ['comprador', 'admin', 'staff'];\n    this.estadoCivil = ['Soltero/a', 'Divorciat/da', 'Casat/da'];\n    this.genders = ['Hombre', 'Mujer', 'Prefriero no decirlo'];\n    this.info = ['', '', 'Accessoris', 'Música'];\n  }\n  // registerUser(user2reg: User): any {\n  //   this.myUsersArray.push(user2reg);\n  // }\n  /**\n   * Check if cookie role exists\n   * @returns Boolean, True if exists, false otherwise\n   */\n  checkCookieSession() {\n    return this.cookieService.check('role');\n  }\n  // Get and return Cookie role value\n  getCookieRole() {\n    return this.cookieService.get('role');\n  }\n}\nUsersServiceService.ɵfac = function UsersServiceService_Factory(t) {\n  return new (t || UsersServiceService)(i0.ɵɵinject(i1.CookieService));\n};\nUsersServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UsersServiceService,\n  factory: UsersServiceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,mBAAmB;EAC9BC,YAAoBC,aAA4B;IAA5B,kBAAa,GAAbA,aAAa;IAEjC,cAAS,GAAK,CAAC,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,CAAC;IAChF,YAAO,GAAO,CAAC,WAAW,EAAE,aAAa,EAAE,WAAW,EAAE,aAAa,CAAC;IACtE,gBAAW,GAAG,CAAC,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC;IACxE,UAAK,GAAS,CAAC,WAAW,EAAE,OAAO,EAAE,OAAO,CAAC;IAC7C,gBAAW,GAAG,CAAC,WAAW,EAAE,cAAc,EAAE,UAAU,CAAC;IACvD,YAAO,GAAO,CAAC,QAAQ,EAAE,OAAO,EAAE,sBAAsB,CAAC;IACzD,SAAI,GAAU,CAAC,EAAE,EAAE,EAAE,EAAE,YAAY,EAAE,QAAQ,CAAC;EARK;EAWnD;EACA;EACA;EAEA;;;;EAIAC,kBAAkB;IAChB,OAAO,IAAI,CAACD,aAAa,CAACE,KAAK,CAAC,MAAM,CAAC;EACzC;EAEA;EACAC,aAAa;IACX,OAAO,IAAI,CAACH,aAAa,CAACI,GAAG,CAAC,MAAM,CAAC;EACvC;;AA3BWN,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;SAAnBA,mBAAmB;EAAAO,SAAnBP,mBAAmB;EAAAQ,YAFlB;AAAM","names":["UsersServiceService","constructor","cookieService","checkCookieSession","check","getCookieRole","get","factory","providedIn"],"sourceRoot":"","sources":["/home/vic/app-uf4/src/app/services/users-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { User } from '../model/User';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UsersServiceService {\n  constructor(private cookieService: CookieService) {}\n\n  usernames   = [\"Juan\", \"Pedro\", \"Miguel\", \"Andrés\", \"María\", \"user01\", \"user02\"];\n  correos     = [\"gmail.com\", \"hotmail.com\", \"yahoo.com\", \"outlook.com\"];\n  contraseñas = [\"contra\", \"seña\", \"pass04\", \"pass02\", \"pass03\", \"pass01\"];\n  roles       = ['comprador', 'admin', 'staff']\n  estadoCivil = ['Soltero/a', 'Divorciat/da', 'Casat/da']\n  genders     = ['Hombre', 'Mujer', 'Prefriero no decirlo']\n  info        = ['', '', 'Accessoris', 'Música']\n  \n\n  // registerUser(user2reg: User): any {\n  //   this.myUsersArray.push(user2reg);\n  // }\n\n  /**\n   * Check if cookie role exists\n   * @returns Boolean, True if exists, false otherwise\n   */\n  checkCookieSession(): boolean {\n    return this.cookieService.check('role');\n  }\n  \n  // Get and return Cookie role value\n  getCookieRole(): string {\n    return this.cookieService.get('role')\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}